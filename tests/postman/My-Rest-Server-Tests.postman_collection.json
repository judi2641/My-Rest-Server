{
	"info": {
		"_postman_id": "3ffdb605-9186-49f3-b2a0-e8da6cae92e9",
		"name": "My-Rest-Server-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45168379",
		"_collection_link": "https://julius-144731.postman.co/workspace/julius's-Workspace~25898895-208a-4cdc-8a9a-a5ed9de83fa4/collection/45168379-3ffdb605-9186-49f3-b2a0-e8da6cae92e9?action=share&source=collection_link&creator=45168379"
	},
	"item": [
		{
			"name": "authenticate admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"authentifizierung erfolgreich, status 200\", () => {",
							"    pm.response.to.have.status(200);",
							"    let authHeader = pm.response.headers.get(\"Authorization\");",
							"    let token = authHeader.split(\" \")[1];",
							"    pm.environment.set(\"token\", token);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost/api/authenticate",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "authenticate without token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"authentifizierung nicht erfolgreich, status 401\", () => {",
							"    pm.response.to.have.status(401);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "1234",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost/api/authenticate",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all users without token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"auflisten aller user ohne token, status 401\", () => {",
							"    pm.response.to.have.status(401);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost/api/users",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all users with admintoken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Fixed typo in pm.response",
							"pm.test(\"auflisten aller user mit token\", () => {",
							"    pm.response.to.have.status(200);",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://localhost/api/users",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get admin with admintoken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"abrufen von admin mit token\", () => {",
							"    pm.response.to.have.status(200);",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody.userID).to.eql(\"admin\");",
							"    pm.expect(responseBody.isAdministrator).to.eql(true);",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://localhost/api/users/admin",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"users",
						"admin"
					]
				}
			},
			"response": []
		},
		{
			"name": "create manfred",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"lege zweiten nutzer an\", () => {",
							"    pm.response.to.have.status(201);",
							"    const responseBody = pm.response.json();",
							"    pm.expect(responseBody.userID).to.eql(\"manfred\");",
							"    pm.expect(responseBody.firstName).to.eql(\"Manfred\");",
							"    pm.expect(responseBody.lastName).to.eql(\"Müller\");",
							"    pm.expect(responseBody.isAdministrator).to.eql(false);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userID\": \"manfred\",\n    \"firstName\": \"Manfred\",\n    \"lastName\": \"Müller\",\n    \"password\": \"asdf\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost/api/users",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "create degreecourese",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"create degree course\", () => {",
							"    pm.response.to.have.status(201);",
							"    const body = pm.response.json();",
							"    pm.environment.set(\"degreeCourseID\", body.id);",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"universityName\": \"Beuth Hochschule für Technik Berlin\",\n    \"universityShortName\": \"Beuth HS\",\n    \"departmentName\": \"Informatik und Medien\",\n    \"departmentShortName\": \"FB VI\",\n    \"name\": \"Orchideenzucht Bachelor\",\n    \"shortName\": \"OZ-BA\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://127.0.0.1/api/degreeCourses",
					"protocol": "https",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"path": [
						"api",
						"degreeCourses"
					]
				}
			},
			"response": []
		},
		{
			"name": "authentifiziere manfred",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"authentifizierung erfolgreich, status 200\", () => {",
							"    pm.response.to.have.status(200);",
							"    let authHeader = pm.response.headers.get(\"Authorization\");",
							"    let token = authHeader.split(\" \")[1];",
							"    pm.environment.set(\"manfredtoken\", token);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "asdf",
							"type": "string"
						},
						{
							"key": "username",
							"value": "manfred",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost/api/authenticate",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"authenticate"
					]
				}
			},
			"response": []
		},
		{
			"name": "list applications for manfred",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"list applications for manfred, should be 0\", () => {",
							"    pm.response.to.have.status(200);",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.be.an('array').that.is.empty;",
							"})",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{manfredtoken}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://localhost/api/degreeCourseApplications/myApplications",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"degreeCourseApplications",
						"myApplications"
					]
				}
			},
			"response": []
		},
		{
			"name": "create application for manfred",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"create application for manfred\", ()=> {",
							"    pm.response.to.have.status(201);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{manfredtoken}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"degreeCourseID\": \"{{degreeCourseID}}\",\n    \"targetPeriodYear\": 2024,\n    \"targetPeriodShortName\": \"WiSe\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost/api/degreeCourseApplications",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"api",
						"degreeCourseApplications"
					]
				}
			},
			"response": []
		}
	]
}